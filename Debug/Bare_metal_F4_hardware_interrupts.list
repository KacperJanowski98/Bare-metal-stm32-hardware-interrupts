
Bare_metal_F4_hardware_interrupts.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001a4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800034c  08000354  00010354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800034c  0800034c  00010354  2**0
                  CONTENTS
  4 .ARM          00000000  0800034c  0800034c  00010354  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800034c  08000354  00010354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800034c  0800034c  0001034c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000350  08000350  00010350  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000354  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000354  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010354  2**0
                  CONTENTS, READONLY
 12 .debug_info   000003e7  00000000  00000000  00010384  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000103  00000000  00000000  0001076b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010870  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  000108b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018126  00000000  00000000  000108e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000004eb  00000000  00000000  00028a0e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00087b78  00000000  00000000  00028ef9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000b0a71  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  000b0ac4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000334 	.word	0x08000334

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000334 	.word	0x08000334

080001e8 <main>:
#define ROTARY_PIN		0

volatile uint8_t led_on;

int main(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0
	// Enable the GPIOB peripheral
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 80001ec:	4b27      	ldr	r3, [pc, #156]	; (800028c <main+0xa4>)
 80001ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f0:	4a26      	ldr	r2, [pc, #152]	; (800028c <main+0xa4>)
 80001f2:	f043 0302 	orr.w	r3, r3, #2
 80001f6:	6313      	str	r3, [r2, #48]	; 0x30
	// Enable the GPIOD peripheral
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 80001f8:	4b24      	ldr	r3, [pc, #144]	; (800028c <main+0xa4>)
 80001fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001fc:	4a23      	ldr	r2, [pc, #140]	; (800028c <main+0xa4>)
 80001fe:	f043 0308 	orr.w	r3, r3, #8
 8000202:	6313      	str	r3, [r2, #48]	; 0x30
	// Enable the SYSCFG peripheral
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8000204:	4b21      	ldr	r3, [pc, #132]	; (800028c <main+0xa4>)
 8000206:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000208:	4a20      	ldr	r2, [pc, #128]	; (800028c <main+0xa4>)
 800020a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800020e:	6453      	str	r3, [r2, #68]	; 0x44
	// Initialize the GPIO pins.
	// PB1 -> input mode with pull_up
	GPIOB->MODER &= ~(0x3 << (BUTTON_PIN*2));	// input mode
 8000210:	4b1f      	ldr	r3, [pc, #124]	; (8000290 <main+0xa8>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a1e      	ldr	r2, [pc, #120]	; (8000290 <main+0xa8>)
 8000216:	f023 030c 	bic.w	r3, r3, #12
 800021a:	6013      	str	r3, [r2, #0]
	GPIOB->PUPDR &= ~(0x3 << (BUTTON_PIN*2));
 800021c:	4b1c      	ldr	r3, [pc, #112]	; (8000290 <main+0xa8>)
 800021e:	68db      	ldr	r3, [r3, #12]
 8000220:	4a1b      	ldr	r2, [pc, #108]	; (8000290 <main+0xa8>)
 8000222:	f023 030c 	bic.w	r3, r3, #12
 8000226:	60d3      	str	r3, [r2, #12]
	GPIOB->PUPDR |= (0x1 << (BUTTON_PIN*2));	// Pull-up
 8000228:	4b19      	ldr	r3, [pc, #100]	; (8000290 <main+0xa8>)
 800022a:	68db      	ldr	r3, [r3, #12]
 800022c:	4a18      	ldr	r2, [pc, #96]	; (8000290 <main+0xa8>)
 800022e:	f043 0304 	orr.w	r3, r3, #4
 8000232:	60d3      	str	r3, [r2, #12]
	GPIOB->MODER &= ~(0x3 << (ROTARY_PIN*2));	// input mode
 8000234:	4b16      	ldr	r3, [pc, #88]	; (8000290 <main+0xa8>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a15      	ldr	r2, [pc, #84]	; (8000290 <main+0xa8>)
 800023a:	f023 0303 	bic.w	r3, r3, #3
 800023e:	6013      	str	r3, [r2, #0]
	GPIOB->PUPDR &= ~(0x3 << (ROTARY_PIN*2));
 8000240:	4b13      	ldr	r3, [pc, #76]	; (8000290 <main+0xa8>)
 8000242:	68db      	ldr	r3, [r3, #12]
 8000244:	4a12      	ldr	r2, [pc, #72]	; (8000290 <main+0xa8>)
 8000246:	f023 0303 	bic.w	r3, r3, #3
 800024a:	60d3      	str	r3, [r2, #12]
	GPIOB->PUPDR |= (0x1 << (ROTARY_PIN*2));	// Pull-up
 800024c:	4b10      	ldr	r3, [pc, #64]	; (8000290 <main+0xa8>)
 800024e:	68db      	ldr	r3, [r3, #12]
 8000250:	4a0f      	ldr	r2, [pc, #60]	; (8000290 <main+0xa8>)
 8000252:	f043 0301 	orr.w	r3, r3, #1
 8000256:	60d3      	str	r3, [r2, #12]
	// PD12 is connected to LED
	// Set to push-pull low-speed output
	GPIOD->MODER &= ~(0x3 << (LED_PIN*2));		// Clear bits
 8000258:	4b0e      	ldr	r3, [pc, #56]	; (8000294 <main+0xac>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	4a0d      	ldr	r2, [pc, #52]	; (8000294 <main+0xac>)
 800025e:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000262:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (0x1 << (LED_PIN*2));		// output mode
 8000264:	4b0b      	ldr	r3, [pc, #44]	; (8000294 <main+0xac>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	4a0a      	ldr	r2, [pc, #40]	; (8000294 <main+0xac>)
 800026a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800026e:	6013      	str	r3, [r2, #0]
	GPIOD->OTYPER &= ~(0x1 << LED_PIN);			// push-pull
 8000270:	4b08      	ldr	r3, [pc, #32]	; (8000294 <main+0xac>)
 8000272:	685b      	ldr	r3, [r3, #4]
 8000274:	4a07      	ldr	r2, [pc, #28]	; (8000294 <main+0xac>)
 8000276:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800027a:	6053      	str	r3, [r2, #4]
	GPIOD->PUPDR &= ~(0x3 << (LED_PIN*2));		// no pull-up, pull-down
 800027c:	4b05      	ldr	r3, [pc, #20]	; (8000294 <main+0xac>)
 800027e:	68db      	ldr	r3, [r3, #12]
 8000280:	4a04      	ldr	r2, [pc, #16]	; (8000294 <main+0xac>)
 8000282:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000286:	60d3      	str	r3, [r2, #12]

	while (1) {
 8000288:	e7fe      	b.n	8000288 <main+0xa0>
 800028a:	bf00      	nop
 800028c:	40023800 	.word	0x40023800
 8000290:	40020400 	.word	0x40020400
 8000294:	40020c00 	.word	0x40020c00

08000298 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000298:	480d      	ldr	r0, [pc, #52]	; (80002d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800029c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a0:	480c      	ldr	r0, [pc, #48]	; (80002d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a2:	490d      	ldr	r1, [pc, #52]	; (80002d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a4:	4a0d      	ldr	r2, [pc, #52]	; (80002dc <LoopForever+0xe>)
  movs r3, #0
 80002a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a8:	e002      	b.n	80002b0 <LoopCopyDataInit>

080002aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ae:	3304      	adds	r3, #4

080002b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b4:	d3f9      	bcc.n	80002aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b6:	4a0a      	ldr	r2, [pc, #40]	; (80002e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b8:	4c0a      	ldr	r4, [pc, #40]	; (80002e4 <LoopForever+0x16>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002bc:	e001      	b.n	80002c2 <LoopFillZerobss>

080002be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c0:	3204      	adds	r2, #4

080002c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c4:	d3fb      	bcc.n	80002be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c6:	f000 f811 	bl	80002ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ca:	f7ff ff8d 	bl	80001e8 <main>

080002ce <LoopForever>:

LoopForever:
    b LoopForever
 80002ce:	e7fe      	b.n	80002ce <LoopForever>
  ldr   r0, =_estack
 80002d0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002dc:	08000354 	.word	0x08000354
  ldr r2, =_sbss
 80002e0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e4:	2000001c 	.word	0x2000001c

080002e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e8:	e7fe      	b.n	80002e8 <ADC_IRQHandler>
	...

080002ec <__libc_init_array>:
 80002ec:	b570      	push	{r4, r5, r6, lr}
 80002ee:	4d0d      	ldr	r5, [pc, #52]	; (8000324 <__libc_init_array+0x38>)
 80002f0:	4c0d      	ldr	r4, [pc, #52]	; (8000328 <__libc_init_array+0x3c>)
 80002f2:	1b64      	subs	r4, r4, r5
 80002f4:	10a4      	asrs	r4, r4, #2
 80002f6:	2600      	movs	r6, #0
 80002f8:	42a6      	cmp	r6, r4
 80002fa:	d109      	bne.n	8000310 <__libc_init_array+0x24>
 80002fc:	4d0b      	ldr	r5, [pc, #44]	; (800032c <__libc_init_array+0x40>)
 80002fe:	4c0c      	ldr	r4, [pc, #48]	; (8000330 <__libc_init_array+0x44>)
 8000300:	f000 f818 	bl	8000334 <_init>
 8000304:	1b64      	subs	r4, r4, r5
 8000306:	10a4      	asrs	r4, r4, #2
 8000308:	2600      	movs	r6, #0
 800030a:	42a6      	cmp	r6, r4
 800030c:	d105      	bne.n	800031a <__libc_init_array+0x2e>
 800030e:	bd70      	pop	{r4, r5, r6, pc}
 8000310:	f855 3b04 	ldr.w	r3, [r5], #4
 8000314:	4798      	blx	r3
 8000316:	3601      	adds	r6, #1
 8000318:	e7ee      	b.n	80002f8 <__libc_init_array+0xc>
 800031a:	f855 3b04 	ldr.w	r3, [r5], #4
 800031e:	4798      	blx	r3
 8000320:	3601      	adds	r6, #1
 8000322:	e7f2      	b.n	800030a <__libc_init_array+0x1e>
 8000324:	0800034c 	.word	0x0800034c
 8000328:	0800034c 	.word	0x0800034c
 800032c:	0800034c 	.word	0x0800034c
 8000330:	08000350 	.word	0x08000350

08000334 <_init>:
 8000334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000336:	bf00      	nop
 8000338:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800033a:	bc08      	pop	{r3}
 800033c:	469e      	mov	lr, r3
 800033e:	4770      	bx	lr

08000340 <_fini>:
 8000340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000342:	bf00      	nop
 8000344:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000346:	bc08      	pop	{r3}
 8000348:	469e      	mov	lr, r3
 800034a:	4770      	bx	lr
